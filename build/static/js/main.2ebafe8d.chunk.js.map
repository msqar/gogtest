{"version":3,"sources":["assets/icons/cart_icon.svg","services/event-emitter.js","services/mocked-data.js","services/game-service.js","services/events.js","components/CartItem/CartItem.js","components/BubbleEffect/BubbleEffect.js","components/Cart/Cart.js","components/Header/Header.js","utils/prod_status.js","components/GameCard/GameCard.js","components/OverlayBackground/OverlayBackground.js","views/HomeView/HomeView.js","App.js","reportWebVitals.js","index.js"],"names":["EventEmitter","events","dispatch","event","data","this","forEach","callback","subscribe","push","mockedGames","id","thumbnail","title","price","discount","status","GameService","getGames","Promise","resolve","reject","setTimeout","getGameById","filter","game","ADD_TO_CART_EVENT","REMOVED_FROM_CART_EVENT","DROPDOWN_TOGGLE_EVENT","OVERLAY_CLICKED_EVENT","CartItem","handleProductRemoval","props","item","onRemove","className","Image","src","onClick","React","PureComponent","BubbleEffect","Cart","toggleCartDropdown","isVisible","state","setState","Events","closeCartDropdown","onClearCart","removedIds","items","map","prod","onProductAdded","a","productId","response","length","runBubbleAnimation","console","warn","onProductRemoved","productList","cloneDeep","runAnimation","reduce","acum","toFixed","product","idx","CartIcon","alt","calculateCartTotal","renderCartProducts","renderCartContent","Component","Header","Navbar","fixed","Container","Brand","href","PROD_STATUS","Object","freeze","GameCard","handleAddToCart","onAddToCart","renderPriceBadge","NOT_PURCHASED","IN_CART","OWNED","info","Card","Img","variant","Body","Title","Footer","OverlayBackground","onDropdownToggle","onOverlayClick","throttle","HomeView","fetchAllGames","games","productIds","products","includes","gamesCopy","find","Col","xl","cols","lg","md","sm","xs","fluid","Row","renderGameCards","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ebafe8d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cart_icon.61e8da9c.svg\";","/**\n * EventEmitter\n * This is a simple Event-driven solution for multi-level component communication.\n * I thought it would be very overkill to implement Redux in this specific test.\n*/\nexport const EventEmitter = {\n    events: {},\n    dispatch(event, data) {\n        if (!this.events[event]) return;\n        this.events[event].forEach(callback => callback(data));\n    },\n    subscribe(event, callback) {\n        if (!this.events[event]) this.events[event] = [];\n        this.events[event].push(callback);\n    }\n}","export const mockedGames = [\n    {\n        id: 1,\n        thumbnail: '/images/game_thumbnail_2.png',\n        title: `Oddworld: Stranger's Wrath`,\n        price: 9.99,\n        discount: '50%',\n        status: 1\n    },\n    {\n        id: 2,\n        thumbnail: '/images/game_thumbnail_3.png',\n        title: 'Chaos on Deponia',\n        price: 14.99,\n        discount: null,\n        status: 2\n    },\n    {\n        id: 3,\n        thumbnail: '/images/game_thumbnail_5.png',\n        title: 'The Settlers 2: Gold Edition',\n        price: 9.99,\n        discount: null,\n        status: 1\n    },\n    {\n        id: 4,\n        thumbnail: '/images/game_thumbnail_4.png',\n        title: 'Neverwinter Nights',\n        price: 4.99,\n        discount: '50%',\n        status: 1\n    },\n    {\n        id: 5,\n        thumbnail: '/images/game_thumbnail_1.png',\n        title: `Assassin's Creed: Director's Cut`,\n        price: 24.99,\n        discount: null,\n        status: 1\n    }\n];","import { mockedGames } from './mocked-data';\n\nconst GameService = {\n    /**\n     * This endpoint gets all game products\n     * @returns {Promise}\n     */\n    getGames: () => {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                resolve(mockedGames);\n            }, 300);\n        });\n    },\n\n    /**\n     * This endpoint gets a product by its ID\n     * @param {Boolean} id\n     * @returns {Promise}\n     */\n    getGameById: (id) => {\n        return new Promise((resolve, reject) => {\n            const response = mockedGames.filter((game) => game.id === id);\n            resolve(response);\n        })\n    }\n}\n\nexport default GameService;","// Cart Events\nexport const ADD_TO_CART_EVENT = 'ADD_TO_CART_EVENT';\nexport const REMOVED_FROM_CART_EVENT = 'REMOVED_FROM_CART_EVENT';\n\n// Dropdown Events\nexport const DROPDOWN_TOGGLE_EVENT = 'DROPDOWN_TOGGLE_EVENT';\n\n// Background Overlay Events\nexport const OVERLAY_CLICKED_EVENT = 'OVERLAY_CLICKED_EVENT';","import React from 'react';\nimport { Image } from 'react-bootstrap';\n\n/**\n * CartItem Component:\n * This is a cart item product template.\n *\n * Usage example:\n * <CartItem onRemove={this.callback} item={someItem} />\n*/\nclass CartItem extends React.PureComponent {\n\n    handleProductRemoval = () => {\n        const { item, onRemove } = this.props;\n        if (onRemove) onRemove(item.id);\n    }\n\n    render() {\n        const { item } = this.props;\n        return (\n            <div className=\"CartItem\">\n                <div className=\"CartItem-thumbnailContainer\">\n                    <Image className=\"CartItem-thumbnail\" src={item.thumbnail} />\n                </div>\n                <div className=\"CartItem-bodyWrap\">\n                    <div className=\"CartItem-body\">\n                        <span className=\"CartItem-title\">{item.title}</span>\n                        <button onClick={this.handleProductRemoval} className=\"CartItem-removeButton Button--textOnly\">Remove</button>\n                    </div>\n                    <div className=\"CartItem-priceContainer\">\n                        <span className=\"CartItem-priceTag\">$ {item.price}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CartItem;","import React from 'react';\n\n/**\n * BubbleEffect Component:\n * This is a component effect, that shows a little bubble animation used as a click event feedback.\n *\n * Usage:\n * <BubbleEffect />\n*/\nclass BubbleEffect extends React.PureComponent {\n    render() {\n        return (\n            <div className=\"BubbleEffect\">\n                <div className=\"BubbleEffect-circle\"></div>\n            </div>\n        )\n    }\n}\n\nexport default BubbleEffect;","import React from 'react';\nimport CartIcon from '../../assets/icons/cart_icon.svg';\nimport { EventEmitter } from '../../services/event-emitter';\nimport GameService from '../../services/game-service';\nimport { Events } from '../../services/index';\nimport CartItem from '../CartItem/CartItem';\nimport BubbleEffect from '../BubbleEffect/BubbleEffect';\nimport { cloneDeep } from 'lodash';\n\n/**\n * Cart Component:\n * Ideally, this Cart implementation would be based on a server-side solution.\n * But due to the lack of an API, the implementation below is pretty different than in a\n * real case scenario.\n*/\nconst BUBBLE_ANIMATION_TIMEOUT = 500;\n\nclass Cart extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false,\n            runAnimation: false,\n            items: []\n        }\n    }\n\n    componentDidMount() {\n        EventEmitter.subscribe(Events.ADD_TO_CART_EVENT, this.onProductAdded);\n        EventEmitter.subscribe(Events.OVERLAY_CLICKED_EVENT, this.closeCartDropdown);\n    }\n\n    toggleCartDropdown = () => {\n        const { isVisible } = this.state;\n        this.setState({isVisible: !isVisible}, () => {\n            EventEmitter.dispatch(Events.DROPDOWN_TOGGLE_EVENT, {isVisible: !isVisible});\n        });\n    }\n\n    closeCartDropdown = () => {\n        this.setState({isVisible: false});\n    }\n\n    calculateCartTotal() {\n        const { items } = this.state;\n        return items.reduce((acum, item) => {\n            return acum + item.price;\n        }, 0).toFixed(2);\n    }\n\n    onClearCart = () => {\n        const { items } = this.state;\n        const removedIds = items.map((prod) => prod.id);\n        this.setState({items: []}, () => {\n            EventEmitter.dispatch(Events.REMOVED_FROM_CART_EVENT, [...removedIds]);\n        });\n    }\n\n    /**\n     * This callback is called when product add event is dispatched.\n     * Gets game by ID using the mocked service and pushes it to the cart.\n     * @param {number} productId\n     */\n    onProductAdded = async ({productId}) => {\n        try {\n            const response = await GameService.getGameById(productId);\n            if (response.length) {\n                const items = [...this.state.items];\n                items.push(response[0]);\n                this.setState({items}, () => {\n                    this.runBubbleAnimation();\n                });\n            }\n        } catch (error) {\n            console.warn('(ERROR) Cart: There was an error while attempting to get the game by id', error);\n        }\n    }\n\n    /**\n     * This callback is called when product remove event is dispatched within the Cart.\n     * Iterates through the current games' list and removes it by its id.\n     * @param {number} id\n     */\n    onProductRemoved = (id) => {\n        const { items } = this.state;\n\n        let productList = cloneDeep(items);\n        productList = productList.filter((prod) => prod.id !== id);\n\n        this.setState({items: productList}, () => {\n            EventEmitter.dispatch(Events.REMOVED_FROM_CART_EVENT, [id]);\n        });\n    }\n\n    runBubbleAnimation() {\n        this.setState({runAnimation: true});\n\n        setTimeout(() => {\n            this.setState({runAnimation: false});\n        }, BUBBLE_ANIMATION_TIMEOUT)\n    }\n\n    renderCartProducts() {\n        const { items } = this.state;\n        return items.map((product, idx) => {\n            return <CartItem key={idx} item={product} onRemove={this.onProductRemoved}/>\n        });\n    }\n\n    renderCartContent() {\n        const { items } = this.state;\n        if (items.length === 0) {\n            return (\n                <div className=\"Cart-dropdownBody is--empty\">\n                    <img className=\"Cart-dropdown-cartIcon\" src={CartIcon} alt=\"Cart_Icon\" />\n                    <span className=\"Cart-dropdown-emptyTitle\">Your Cart is Empty</span>\n                    <div className=\"Divider\"/>\n                    <span className=\"Text--secondary Text--14\">Explore great games and offers</span>\n                    <button className=\"Button--secondary u-marginTl\">BROWSE BESTSELLERS</button>\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"Cart-dropdownBody\">\n                <div className=\"Cart-dropdownRow\">\n                    <span className=\"Text--12 Text--bold Text--uppercase\">\n                        {items.length} {items.length === 1 ? 'item' : 'items '} in cart\n                    </span>\n                    <div>\n                        <span className=\"Text--12 Text--bold u-marginRm js-totalPrice\">$ { this.calculateCartTotal() }</span>\n                        <button className=\"Button u-paddingHl\" onClick={this.onClearCart}>CLEAR CART</button>\n                    </div>\n                </div>\n                <div className=\"Divider--fullWidth u-marginAn\" />\n                <div className=\"Cart-products\">\n                    { this.renderCartProducts() }\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const { isVisible, items, runAnimation } = this.state;\n        return (\n            <div className={'Cart ' + (isVisible ? 'is--opened' : '')}>\n                <button className=\"Cart-button\" onClick={this.toggleCartDropdown}>\n                    <img className=\"Cart-icon\" alt=\"Cart_Icon\" src={CartIcon}/>\n                    <span className=\"Cart-counter\">{items.length}</span>\n                    {\n                        runAnimation &&\n                        <BubbleEffect />\n                    }\n                </button>\n                <div className={'Cart-dropdown ' + (isVisible ? 'is--visible' : '')}>\n                    { this.renderCartContent() }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Cart;","import React from 'react';\nimport { Container, Navbar } from 'react-bootstrap';\nimport Cart from '../Cart/Cart';\n\n/**\n * Header Component:\n * This is the site's header.\n * It includes the Cart component functionality.\n*/\nclass Header extends React.PureComponent {\n    render() {\n        return (\n            <Navbar className=\"Header\" fixed=\"top\">\n                <Container>\n                    <Navbar.Brand href=\"/\">\n                        <img\n                            src=\"/images/gog_logo.png\"\n                            className=\"Header-logo d-inline-block align-top\"\n                            alt=\"GOG\"/>\n                    </Navbar.Brand>\n                    <Cart />\n                </Container>\n            </Navbar>\n        )\n    }\n}\n\nexport default Header;","const PROD_STATUS = Object.freeze(\n{\n    'NOT_PURCHASED': 1,\n    'OWNED': 2,\n    'IN_CART': 3\n});\n\nexport default PROD_STATUS;","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport PROD_STATUS from '../../utils/prod_status';\n\n/**\n * CartItem Component:\n * This is a cart item product template.\n *\n * Usage example:\n * <CartItem onRemove={this.callback} item={someItem} />\n*/\nclass GameCard extends React.PureComponent {\n\n    handleAddToCart = (id) => {\n        const { onAddToCart } = this.props;\n        if (onAddToCart) onAddToCart(id);\n    }\n\n    renderPriceBadge = ({status, price, id}) => {\n        switch(status) {\n            case PROD_STATUS.NOT_PURCHASED:\n                return <button className=\"Button--small\" onClick={() => this.handleAddToCart(id)}>$ {price}</button>\n            case PROD_STATUS.IN_CART:\n                return <div className=\"Badge--dark\">IN CART</div>\n            case PROD_STATUS.OWNED:\n                return <div className=\"Badge--disabled\">OWNED</div>\n            default:\n                return null;\n        }\n    }\n\n    render() {\n        const { info } = this.props;\n        return (\n            <Card className=\"GameCard\">\n                <Card.Img className=\"GameCard-thumbnail\" variant=\"top\" src={info.thumbnail} />\n                <Card.Body className=\"GameCard-body\">\n                    <Card.Title className=\"GameCard-title\">{info.title}</Card.Title>\n                </Card.Body>\n                <Card.Footer className=\"GameCard-footer\">\n                    {\n                        info.discount &&\n                        <div className=\"Badge\">-{info.discount}</div>\n                    }\n                    { this.renderPriceBadge(info) }\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default GameCard;","import { throttle } from 'lodash';\nimport React from 'react';\nimport { EventEmitter } from '../../services/event-emitter';\nimport { Events } from '../../services/index';\n\n/**\n * OverlayBackground Component:\n * This is a common overlay background, usually used when a dropdown is opened.\n * It implements onClick detection and throws an OVERLAY_CLICKED_EVENT.\n * And finally, listens to any dropdown close event to dismiss the overlay.\n*/\nclass OverlayBackground extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: false\n        }\n    }\n\n    componentDidMount() {\n        EventEmitter.subscribe(Events.DROPDOWN_TOGGLE_EVENT, this.onDropdownToggle);\n    }\n\n    onDropdownToggle = ({isVisible}) => {\n        this.setState({isVisible});\n    }\n\n    onOverlayClick = () => {\n        this.setState({isVisible: false});\n        EventEmitter.dispatch(Events.OVERLAY_CLICKED_EVENT, {});\n    }\n\n    render() {\n        const { isVisible } = this.state;\n        return (\n            <div className={'OverlayBackground ' + (isVisible ? 'is--visible' : '')} onClick={ throttle(this.onOverlayClick, 300) }/>\n        );\n    }\n}\n\nexport default OverlayBackground;","import { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Col, Container, Image, Row } from 'react-bootstrap';\nimport GameCard from '../../components/GameCard/GameCard';\nimport OverlayBackground from '../../components/OverlayBackground/OverlayBackground';\nimport { EventEmitter } from '../../services/event-emitter';\nimport GameService from '../../services/game-service';\nimport { Events } from '../../services/index';\nimport PROD_STATUS from '../../utils/prod_status';\nimport './HomeView.scss';\n\nclass HomeView extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            games: []\n        }\n    }\n\n    componentDidMount() {\n        EventEmitter.subscribe(Events.REMOVED_FROM_CART_EVENT, this.onProductRemoved);\n\n        this.fetchAllGames();\n    }\n\n    /**\n     * This function retrieves all games from the mocked server and stores it in the component's state.\n     */\n    fetchAllGames = async () => {\n        try {\n            const games = await GameService.getGames();\n            if (games.length) {\n                this.setState({games});\n            }\n        } catch (error) {\n            console.warn('(ERROR) HomeView: There was an error while attempting to get the games', error);\n        }\n    }\n\n    /**\n     * This function callback is called whenever a product is removed from the Cart.\n     * Receives an array of IDs of 1-N size.\n     * Stores the result to the current game state.\n     * @param {Array} productIds\n     */\n    onProductRemoved = (productIds) => {\n        const { games } = this.state;\n        const products = cloneDeep(games);\n\n        products.forEach((prod) => {\n            if (productIds.includes(prod.id)) {\n                prod.status = PROD_STATUS.NOT_PURCHASED\n            }\n        });\n\n        this.setState({games: products});\n    }\n\n    renderGameCards() {\n        const { games } = this.state;\n        return games.map((game, idx) => {\n            return (\n                <Col className=\"HomeView-col\" xl={{cols: '5'}} lg={{cols: '5'}} md=\"6\" sm=\"6\" xs=\"6\" key={idx}>\n                    <GameCard onAddToCart={this.handleAddToCart} info={game} />\n                </Col>\n            )\n        });\n    }\n\n    /**\n     * This function would call backend to add a product to cart, as instead it's being mocked again.\n     * @param {number} productId\n     */\n    handleAddToCart = (productId) => {\n        const { games } = this.state;\n        const gamesCopy = cloneDeep(games);\n\n        const game = gamesCopy.find((game) => game.id === productId);\n        game.status = PROD_STATUS.IN_CART;\n\n        this.setState({games: gamesCopy}, () => {\n            EventEmitter.dispatch(Events.ADD_TO_CART_EVENT, { productId });\n        });\n    }\n\n    render() {\n        return (\n            <Container fluid=\"md\">\n                <OverlayBackground />\n                <div className=\"HomeView\">\n                    <section className=\"Section\">\n                        <span className=\"Section-title text-uppercase\">GAME OF THE WEEK</span>\n                        <div className=\"Banner\">\n                            <div className=\"Banner-imageContainer\">\n                                <Image className=\"Banner-image\" src=\"images/game_bg_xl.png\" alt=\"highlight_game\"/>\n                            </div>\n                            <div className=\"Section-gameResults\">\n                                <Row className=\"HomeView-row\">\n                                    { this.renderGameCards() }\n                                </Row>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n            </Container>\n        );\n    }\n}\n\nexport default HomeView;","import React from 'react';\nimport Header from './components/Header/Header';\nimport HomeView from './views/HomeView/HomeView';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <HomeView />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './custom.scss';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}